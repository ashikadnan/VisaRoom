// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisaRoom.Data;

namespace VisaRoom.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231209064049_qualificationandex")]
    partial class qualificationandex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VisaRoom.Models.ApplyCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApplyCountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplyCountry");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApplyCountryId")
                        .HasColumnType("int");

                    b.Property<string>("CandidateCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CandidatePhone")
                        .HasColumnType("int");

                    b.Property<int?>("ExperienceId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int>("VisaTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplyCountryId");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("VisaTypeId");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate_Company", b =>
                {
                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("ComapnyId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId", "ComapnyId");

                    b.HasIndex("ComapnyId");

                    b.ToTable("Candidates_Companies");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate_Experience", b =>
                {
                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId", "ExperienceId");

                    b.HasIndex("ExperienceId");

                    b.ToTable("Candidates_Experiences");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate_Qualification", b =>
                {
                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("QualificationId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId", "QualificationId");

                    b.HasIndex("QualificationId");

                    b.ToTable("Candidates_Qualifications");
                });

            modelBuilder.Entity("VisaRoom.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("VisaRoom.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmployerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerPhone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employer");
                });

            modelBuilder.Entity("VisaRoom.Models.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearsExperience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("VisaRoom.Models.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DegreeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassingYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("VisaRoom.Models.VisaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("VisaTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VisaType");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate", b =>
                {
                    b.HasOne("VisaRoom.Models.ApplyCountry", "ApplyCountryObj")
                        .WithMany("Candidates")
                        .HasForeignKey("ApplyCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaRoom.Models.Experience", "Experience")
                        .WithMany()
                        .HasForeignKey("ExperienceId");

                    b.HasOne("VisaRoom.Models.Qualification", "Qualification")
                        .WithMany()
                        .HasForeignKey("QualificationId");

                    b.HasOne("VisaRoom.Models.VisaType", "VisaTypeObj")
                        .WithMany("Candidates")
                        .HasForeignKey("VisaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplyCountryObj");

                    b.Navigation("Experience");

                    b.Navigation("Qualification");

                    b.Navigation("VisaTypeObj");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate_Company", b =>
                {
                    b.HasOne("VisaRoom.Models.Candidate", "Candidate")
                        .WithMany("Candidate_CompanyObj")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaRoom.Models.Company", "Company")
                        .WithMany("Candidate_CompanyObj")
                        .HasForeignKey("ComapnyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate_Experience", b =>
                {
                    b.HasOne("VisaRoom.Models.Candidate", "Candidate")
                        .WithMany("Candidate_ExperienceObj")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaRoom.Models.Experience", "Experience")
                        .WithMany("CandidateExperienceObj")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate_Qualification", b =>
                {
                    b.HasOne("VisaRoom.Models.Candidate", "Candidate")
                        .WithMany("Candidate_QualificationsObj")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisaRoom.Models.Qualification", "Qualification")
                        .WithMany("CandidateQualificationsObj")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Qualification");
                });

            modelBuilder.Entity("VisaRoom.Models.ApplyCountry", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("VisaRoom.Models.Candidate", b =>
                {
                    b.Navigation("Candidate_CompanyObj");

                    b.Navigation("Candidate_ExperienceObj");

                    b.Navigation("Candidate_QualificationsObj");
                });

            modelBuilder.Entity("VisaRoom.Models.Company", b =>
                {
                    b.Navigation("Candidate_CompanyObj");
                });

            modelBuilder.Entity("VisaRoom.Models.Experience", b =>
                {
                    b.Navigation("CandidateExperienceObj");
                });

            modelBuilder.Entity("VisaRoom.Models.Qualification", b =>
                {
                    b.Navigation("CandidateQualificationsObj");
                });

            modelBuilder.Entity("VisaRoom.Models.VisaType", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
